
local function webview_callback(self, webview_id, request_id, type, data)
	if type == webview.CALLBACK_RESULT_URL_OK then
		-- the page is now loaded, let's show it
		webview.set_visible(webview_id, 1)

		label.set_text("#label", "CALLBACK_RESULT_URL_OK")

	elseif type == webview.CALLBACK_RESULT_URL_ERROR then
		print("Failed to load url: " .. data["url"])
		print("Error: " .. data["error"])

		label.set_text("#label", "CALLBACK_RESULT_URL_ERROR")

	elseif type == webview.CALLBACK_RESULT_URL_LOADING then
		-- a page is loading
		-- return false to prevent it from loading
		-- return true or nil to continue loading the page
		-- if data.url ~= "https://www.defold.com/" then
		-- 	return false
		-- end

		label.set_text("#label", "CALLBACK_RESULT_URL_LOADING")

	elseif type == webview.CALLBACK_RESULT_EVAL_OK then
		print("Eval ok. Result: " .. data['result'])

		label.set_text("#label", "CALLBACK_RESULT_EVAL_OK")

	elseif type == webview.CALLBACK_RESULT_EVAL_ERROR then
		print("Eval not ok. Request # " .. request_id)

		label.set_text("#label", "CALLBACK_RESULT_EVAL_ERROR")

	end
end


function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })

	if webview == nil then
		print('no available on PC')
		label.set_text("#label", "no available on PC")
		
	else
		local webview_id = webview.create(webview_callback)

		local feedback_html = sys.load_resource("file:///android_asset/www/index.html")
		webview.open_raw(webview_id, feedback_html)

		webview.set_position(webview_id, 0, 0, -1, -1)
		
	end
	
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		print("Touch!")
	end
end